name: Cargo Build

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  cargo-builds:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Get rust toolchain to use for checks and lints
        id: toolchain
        run: |
          echo "rs-toolchain=$(make rs_toolchain)" >> "${GITHUB_OUTPUT}"

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.toolchain.outputs.rs-toolchain }}
          components: clippy,rustfmt
          default: true

      - name: Check format
        run: |
          make check_fmt

      - name: Clippy booleans
        run: |
          make clippy_boolean

      - name: Build Release boolean
        run: |
          cargo build \
            --release --features=x86_64-unix,booleans -p tfhe

      - name: Clippy shortints
        run: |
          make clippy_shortint

      - name: Build Release shortint
        run: |
          cargo build \
            --release --features=x86_64-unix,shortints -p tfhe

      - name: Clippy shortints and booleans
        run: |
          make clippy

      - name: Build Release shortint and boolean
        run: |
          cargo build \
            --release --features=x86_64-unix,shortints,booleans -p tfhe

      - name: C API Clippy
        run: |
          make clippy_c_api

      - name: Build Release c_api
        run: |
          cargo build \
            --release --features=x86_64-unix,booleans-c-api,shortints-c-api -p tfhe
